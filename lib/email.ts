import { Resend } from "resend"

const resend = new Resend(process.env.RESEND_API_KEY)

interface EmailTemplate {
  to: string
  subject: string
  html: string
  from?: string
}

export class EmailService {
  private static instance: EmailService
  private fromEmail = process.env.FROM_EMAIL || "noreply@caris.com"

  static getInstance(): EmailService {
    if (!EmailService.instance) {
      EmailService.instance = new EmailService()
    }
    return EmailService.instance
  }

  async sendEmail({ to, subject, html, from }: EmailTemplate) {
    try {
      const result = await resend.emails.send({
        from: from || this.fromEmail,
        to,
        subject,
        html,
      })

      console.log("Email enviado com sucesso:", result)
      return { success: true, data: result }
    } catch (error) {
      console.error("Erro ao enviar email:", error)
      return { success: false, error }
    }
  }

  // Template para lembrete de sess√£o
  async sendSessionReminder(
    patientEmail: string,
    patientName: string,
    sessionDate: Date,
    psychologistName: string,
    sessionType: string,
  ) {
    const formattedDate = sessionDate.toLocaleDateString("pt-BR", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
    })

    const formattedTime = sessionDate.toLocaleTimeString("pt-BR", {
      hour: "2-digit",
      minute: "2-digit",
    })

    const html = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>Lembrete de Sess√£o - C√°ris</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #2D9B9B, #1E7A7A); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
            .session-card { background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2D9B9B; }
            .button { display: inline-block; background: #2D9B9B; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üåü Lembrete de Sess√£o</h1>
              <p>Sua sess√£o est√° chegando!</p>
            </div>
            <div class="content">
              <p>Ol√°, <strong>${patientName}</strong>!</p>
              
              <p>Este √© um lembrete amig√°vel sobre sua pr√≥xima sess√£o de terapia:</p>
              
              <div class="session-card">
                <h3>üìÖ Detalhes da Sess√£o</h3>
                <p><strong>Data:</strong> ${formattedDate}</p>
                <p><strong>Hor√°rio:</strong> ${formattedTime}</p>
                <p><strong>Psic√≥logo(a):</strong> ${psychologistName}</p>
                <p><strong>Tipo:</strong> ${sessionType === "online" ? "üíª Online" : "üè¢ Presencial"}</p>
              </div>

              ${
                sessionType === "online"
                  ? `
                <p>Para sess√µes online, certifique-se de:</p>
                <ul>
                  <li>Ter uma conex√£o est√°vel com a internet</li>
                  <li>Estar em um ambiente privado e silencioso</li>
                  <li>Testar seu microfone e c√¢mera previamente</li>
                </ul>
                <a href="#" class="button">üé• Entrar na Sess√£o</a>
              `
                  : `
                <p>Para sess√µes presenciais, lembre-se de:</p>
                <ul>
                  <li>Chegar com 10 minutos de anteced√™ncia</li>
                  <li>Trazer um documento de identifica√ß√£o</li>
                  <li>Confirmar o endere√ßo do consult√≥rio</li>
                </ul>
              `
              }

              <p>Se precisar reagendar ou tiver alguma d√∫vida, entre em contato conosco o quanto antes.</p>
              
              <div class="footer">
                <p>Cuidando de voc√™ com carinho üíö</p>
                <p><strong>Equipe C√°ris</strong></p>
                <p><small>Este √© um e-mail autom√°tico. Para d√∫vidas, responda este e-mail.</small></p>
              </div>
            </div>
          </div>
        </body>
      </html>
    `

    return this.sendEmail({
      to: patientEmail,
      subject: `üåü Lembrete: Sua sess√£o com ${psychologistName} √© amanh√£`,
      html,
    })
  }

  // Template para nova sess√£o agendada
  async sendSessionConfirmation(
    patientEmail: string,
    patientName: string,
    sessionDate: Date,
    psychologistName: string,
    sessionType: string,
  ) {
    const formattedDate = sessionDate.toLocaleDateString("pt-BR", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
    })

    const formattedTime = sessionDate.toLocaleTimeString("pt-BR", {
      hour: "2-digit",
      minute: "2-digit",
    })

    const html = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>Sess√£o Confirmada - C√°ris</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #2D9B9B, #1E7A7A); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
            .session-card { background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2D9B9B; }
            .success { background: #d4edda; color: #155724; padding: 15px; border-radius: 6px; margin: 15px 0; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>‚úÖ Sess√£o Confirmada!</h1>
              <p>Sua sess√£o foi agendada com sucesso</p>
            </div>
            <div class="content">
              <p>Ol√°, <strong>${patientName}</strong>!</p>
              
              <div class="success">
                <strong>üéâ √ìtima not√≠cia!</strong> Sua sess√£o foi confirmada e est√° no seu calend√°rio.
              </div>
              
              <div class="session-card">
                <h3>üìÖ Detalhes da Sess√£o</h3>
                <p><strong>Data:</strong> ${formattedDate}</p>
                <p><strong>Hor√°rio:</strong> ${formattedTime}</p>
                <p><strong>Psic√≥logo(a):</strong> ${psychologistName}</p>
                <p><strong>Tipo:</strong> ${sessionType === "online" ? "üíª Online" : "üè¢ Presencial"}</p>
              </div>

              <p>Voc√™ receber√° um lembrete 24 horas antes da sess√£o.</p>
              
              <p>Se precisar reagendar ou cancelar, fa√ßa isso com pelo menos 24 horas de anteced√™ncia.</p>
              
              <div class="footer">
                <p>Estamos ansiosos para te ajudar! üíö</p>
                <p><strong>Equipe C√°ris</strong></p>
              </div>
            </div>
          </div>
        </body>
      </html>
    `

    return this.sendEmail({
      to: patientEmail,
      subject: `‚úÖ Sess√£o confirmada para ${formattedDate}`,
      html,
    })
  }

  // Template para nova entrada no di√°rio
  async sendDiaryNotification(
    psychologistEmail: string,
    psychologistName: string,
    patientName: string,
    entryTitle: string,
  ) {
    const html = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>Nova Entrada no Di√°rio - C√°ris</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #2D9B9B, #1E7A7A); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
            .notification-card { background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #FF8C42; }
            .button { display: inline-block; background: #2D9B9B; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üìù Nova Entrada no Di√°rio</h1>
              <p>Um dos seus pacientes fez uma nova entrada</p>
            </div>
            <div class="content">
              <p>Ol√°, <strong>Dr(a). ${psychologistName}</strong>!</p>
              
              <div class="notification-card">
                <h3>üìñ Detalhes da Entrada</h3>
                <p><strong>Paciente:</strong> ${patientName}</p>
                <p><strong>T√≠tulo:</strong> "${entryTitle}"</p>
                <p><strong>Data:</strong> ${new Date().toLocaleDateString("pt-BR")}</p>
              </div>

              <p>Esta entrada est√° dispon√≠vel para revis√£o no painel do psic√≥logo.</p>
              
              <a href="#" class="button">üìã Ver Entrada Completa</a>
              
              <div class="footer">
                <p>Acompanhando o progresso juntos üíö</p>
                <p><strong>Equipe C√°ris</strong></p>
              </div>
            </div>
          </div>
        </body>
      </html>
    `

    return this.sendEmail({
      to: psychologistEmail,
      subject: `üìù ${patientName} fez uma nova entrada no di√°rio`,
      html,
    })
  }
}
