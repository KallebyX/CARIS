const { analyzeEmotionalContent, analyzeMoodPatterns, generateTherapeuticInsights } = require('../lib/ai-analysis.ts')

async function testAIAnalysis() {
  console.log('üß† Testando an√°lise de IA emocional...\n')

  // Teste 1: An√°lise de conte√∫do emocional b√°sico
  console.log('üìù Teste 1: An√°lise de conte√∫do emocional')
  console.log('=' * 50)
  
  const testContent = "Hoje me senti muito triste e ansioso. Tive dificuldades para dormir e me concentrar no trabalho. Sinto que nada est√° dando certo na minha vida."
  
  try {
    const analysis = await analyzeEmotionalContent(testContent)
    console.log('Texto analisado:', testContent)
    console.log('\nResultado da an√°lise:')
    console.log('- Emo√ß√£o dominante:', analysis.dominantEmotion)
    console.log('- Intensidade emocional:', analysis.emotionIntensity)
    console.log('- Score de sentimento:', analysis.sentimentScore)
    console.log('- N√≠vel de risco:', analysis.riskLevel)
    console.log('- Emo√ß√µes detectadas:', analysis.detectedEmotions.join(', '))
    console.log('- Categorias Plutchik:', analysis.plutchikCategories.join(', '))
    console.log('- Insights:', analysis.insights.join('; '))
    console.log('- A√ß√µes sugeridas:', analysis.suggestedActions.join('; '))
  } catch (error) {
    console.error('‚ùå Erro na an√°lise:', error.message)
  }

  console.log('\n' + '=' * 50)

  // Teste 2: An√°lise de padr√µes de humor
  console.log('üìä Teste 2: An√°lise de padr√µes de humor')
  console.log('=' * 50)

  const mockDiaryEntries = [
    { content: "Dia muito dif√≠cil, me senti deprimido", moodRating: 2, createdAt: new Date('2024-01-01') },
    { content: "Um pouco melhor hoje, mas ainda triste", moodRating: 3, createdAt: new Date('2024-01-02') },
    { content: "Dia neutro, sem grandes mudan√ßas", moodRating: 5, createdAt: new Date('2024-01-03') },
    { content: "Me senti mais animado hoje!", moodRating: 7, createdAt: new Date('2024-01-04') },
    { content: "√ìtimo dia, muito feliz e produtivo", moodRating: 9, createdAt: new Date('2024-01-05') }
  ]

  try {
    const patterns = await analyzeMoodPatterns(mockDiaryEntries)
    console.log('Padr√µes de humor analisados:')
    console.log('- Tend√™ncia:', patterns.trend)
    console.log('- Volatilidade:', patterns.volatility)
    console.log('- Humor m√©dio:', patterns.averageMood)
    console.log('- Padr√µes preocupantes:', patterns.concerningPatterns.join('; ') || 'Nenhum')
  } catch (error) {
    console.error('‚ùå Erro na an√°lise de padr√µes:', error.message)
  }

  console.log('\n' + '=' * 50)

  // Teste 3: Insights terap√™uticos
  console.log('üéØ Teste 3: Insights terap√™uticos')
  console.log('=' * 50)

  const recentEntries = [
    { content: "Estou me sentindo ansioso sobre o trabalho", moodRating: 4 },
    { content: "Tive uma sess√£o boa com meu terapeuta", moodRating: 6 },
    { content: "Pratiquei medita√ß√£o e me senti mais calmo", moodRating: 7 }
  ]

  try {
    const insights = await generateTherapeuticInsights(recentEntries, { currentCycle: 'Cuidar' })
    console.log('Insights terap√™uticos gerados:')
    console.log('- Insight semanal:', insights.weeklyInsight)
    console.log('- T√©cnicas recomendadas:', insights.recommendedTechniques.join(', '))
    console.log('- √Åreas de foco:', insights.focusAreas.join(', '))
    console.log('- Notas de progresso:', insights.progressNotes.join('; '))
  } catch (error) {
    console.error('‚ùå Erro nos insights terap√™uticos:', error.message)
  }

  console.log('\n‚úÖ Testes de an√°lise de IA conclu√≠dos!')
}

// Executar apenas se chamado diretamente
if (require.main === module) {
  testAIAnalysis().catch(console.error)
}